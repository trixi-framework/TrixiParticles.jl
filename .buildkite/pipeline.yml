steps:
  - label: "CUDA"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
    agents:
      queue: "juliagpu"
      cuda: "*"
    command: |
      julia --color=yes --project=test -e 'using Pkg; Pkg.add("CUDA"); Pkg.develop(path="."); Pkg.instantiate()'
      julia --color=yes --project=test -e 'include("test/runtests.jl")'
    env:
      TRIXIPARTICLES_TEST: cuda
    timeout_in_minutes: 60

  - label: "AMDGPU"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
    agents:
      queue: "juliagpu"
      rocm: "*"
    command: |
      julia --color=yes --project=test -e 'using Pkg; Pkg.add("AMDGPU"); Pkg.develop(path="."); Pkg.instantiate()'
      julia --color=yes --project=test -e 'include("test/runtests.jl")'
    env:
      TRIXIPARTICLES_TEST: amdgpu
    timeout_in_minutes: 60

  - label: "Metal"
    plugins:
      - JuliaCI/julia#v1:
          version: "1"
    agents:
      queue: "juliaecosystem"
      os: "macos"
      arch: "aarch64"
    command: |
      julia --color=yes --project=test -e 'using Pkg; Pkg.add("Metal"); Pkg.develop(path="."); Pkg.instantiate()'
      julia --color=yes --project=test -e 'include("test/runtests.jl")'
    env:
      TRIXIPARTICLES_TEST: metal
    timeout_in_minutes: 60

  # Doesn't work. Fails with segfault. See https://github.com/trixi-framework/TrixiParticles.jl/issues/484.
  # - label: "oneAPI"
  #   plugins:
  #     - JuliaCI/julia#v1:
  #         version: "1"
  #   agents:
  #     queue: "juliagpu"
  #     intel: "*"
  #   command: |
  #     julia --color=yes --project=test -e 'using Pkg; Pkg.add("oneAPI"); Pkg.develop(path="."); Pkg.instantiate()'
  #     julia --color=yes --project=test -e 'include("test/runtests.jl")'
  #   env:
  #     TRIXIPARTICLES_TEST: oneapi
  #   timeout_in_minutes: 60
