name: CI

on:
  push:
    branches:
      - main
    paths-ignore:
      - 'AUTHORS.md'
      - 'CITATION.bib'
      - 'CONTRIBUTING.md'
      - 'LICENSE.md'
      - 'NEWS.md'
      - 'README.md'
      - '.github/workflows/CompatHelper.yml'
      - 'docs/**'
  pull_request:
      paths-ignore:
      - 'AUTHORS.md'
      - 'CITATION.bib'
      - 'CONTRIBUTING.md'
      - 'LICENSE.md'
      - 'NEWS.md'
      - 'README.md'
      - '.github/workflows/CompatHelper.yml'
      - 'docs/**'
  workflow_dispatch:


# Cancel redundant CI tests automatically
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out project
        uses: actions/checkout@v4
      - name: Set up Julia
        uses: julia-actions/setup-julia@v1
        with:
          version: '1'
      - uses: julia-actions/cache@v1
      - name: Apply JuliaFormatter and check format
        run: |
          julia -e 'using Pkg; Pkg.add("JuliaFormatter")'
          julia -e 'using JuliaFormatter; !format(".", verbose=true) &&
            error("Code not properly formatted")'
      - name: Build package
        uses: julia-actions/julia-buildpkg@v1
      - name: Run unit tests
        uses: julia-actions/julia-runtest@v1
        with:
          annotate: true
          coverage: true
        env:
          TRIXIPARTICLES_TEST: unit
      - name: Process coverage results
        uses: julia-actions/julia-processcoverage@v1
        with:
          directories: src,test
      - name: Upload coverage report to Codecov
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: lcov.info
          fail_ci_if_error: true
          flags: unit
      - name: Compile docs
        run: |
          julia --project=docs -e 'using Pkg; Pkg.develop(PackageSpec(path=pwd())); Pkg.instantiate()'
          julia --project=docs --color=yes docs/make.jl
      - name: Run example tests
        uses: julia-actions/julia-runtest@v1
        with:
          annotate: true
          coverage: false
        env:
          TRIXIPARTICLES_TEST: examples
