@testset verbose=true "Rectangular tank" begin
    @testset verbose=true "One Boundary Layer" begin
        water_width = 0.5
        water_height = 0.5
        container_width = 0.5
        container_height = 0.5
        water_density = 1000
        n_layers = 1

        @testset "Coordinates" begin
            particle_spacings = [0.1, 0.2]
            spacing_ratios = [1, 3]

            expected_fluid_coords = [
                [0.1 0.1 0.1 0.1 0.1 0.2 0.2 0.2 0.2 0.2 0.3 0.3 0.3 0.3 0.3 0.4 0.4 0.4 0.4 0.4 0.5 0.5 0.5 0.5 0.5
                 0.1 0.2 0.3 0.4 0.5 0.1 0.2 0.3 0.4 0.5 0.1 0.2 0.3 0.4 0.5 0.1 0.2 0.3 0.4 0.5 0.1 0.2 0.3 0.4 0.5],
                [0.2 0.2 0.4 0.4; 0.2 0.4 0.2 0.4],
            ]

            expected_bound_coords = [
                [0.0 0.0 0.0 0.0 0.0 0.6 0.6 0.6 0.6 0.6 0.1 0.2 0.3 0.4 0.5 0.1 0.2 0.3 0.4 0.5 0.0 0.0 0.6 0.6
                 0.1 0.2 0.3 0.4 0.5 0.1 0.2 0.3 0.4 0.5 0.0 0.0 0.0 0.0 0.0 0.6 0.6 0.6 0.6 0.6 0.0 0.6 0.0 0.6],
                [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.03333333333333333 0.06666666666666667 0.1 0.13333333333333333 0.16666666666666666 0.19999999999999998 0.23333333333333334 0.26666666666666666 0.3 0.3333333333333333 0.36666666666666664 0.39999999999999997 0.43333333333333335 0.4666666666666667 0.5 0.5333333333333333 0.5666666666666667 0.03333333333333333 0.06666666666666667 0.1 0.13333333333333333 0.16666666666666666 0.19999999999999998 0.23333333333333334 0.26666666666666666 0.3 0.3333333333333333 0.36666666666666664 0.39999999999999997 0.43333333333333335 0.4666666666666667 0.5 0.5333333333333333 0.5666666666666667 0.0 0.0 0.6 0.6;
                 0.03333333333333333 0.06666666666666667 0.1 0.13333333333333333 0.16666666666666666 0.19999999999999998 0.23333333333333334 0.26666666666666666 0.3 0.3333333333333333 0.36666666666666664 0.39999999999999997 0.43333333333333335 0.4666666666666667 0.5 0.5333333333333333 0.5666666666666667 0.03333333333333333 0.06666666666666667 0.1 0.13333333333333333 0.16666666666666666 0.19999999999999998 0.23333333333333334 0.26666666666666666 0.3 0.3333333333333333 0.36666666666666664 0.39999999999999997 0.43333333333333335 0.4666666666666667 0.5 0.5333333333333333 0.5666666666666667 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.6 0.0 0.6 0.0 0.6],
                [0.0 0.0 0.6000000000000001 0.6000000000000001 0.2 0.4 0.2 0.4 0.0 0.0 0.6000000000000001 0.6000000000000001;
                 0.2 0.4 0.2 0.4 0.0 0.0 0.6000000000000001 0.6000000000000001 0.0 0.6000000000000001 0.0 0.6000000000000001],
                [0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6666666666666666 0.6666666666666666 0.6666666666666666 0.6666666666666666 0.6666666666666666 0.6666666666666666 0.6666666666666666 0.6666666666666666 0.6666666666666666 0.06666666666666667 0.13333333333333333 0.2 0.26666666666666666 0.3333333333333333 0.39999999999999997 0.4666666666666667 0.5333333333333333 0.6 0.06666666666666667 0.13333333333333333 0.2 0.26666666666666666 0.3333333333333333 0.39999999999999997 0.4666666666666667 0.5333333333333333 0.6 0.0 0.0 0.6666666666666666 0.6666666666666666;
                 0.06666666666666667 0.13333333333333333 0.2 0.26666666666666666 0.3333333333333333 0.39999999999999997 0.4666666666666667 0.5333333333333333 0.6 0.06666666666666667 0.13333333333333333 0.2 0.26666666666666666 0.3333333333333333 0.39999999999999997 0.4666666666666667 0.5333333333333333 0.6 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.0 0.6666666666666666 0.6666666666666666 0.6666666666666666 0.6666666666666666 0.6666666666666666 0.6666666666666666 0.6666666666666666 0.6666666666666666 0.6666666666666666 0.0 0.6666666666666666 0.0 0.6666666666666666],
            ]
            boundary_coords_index = 0

            @testset "Particle Spacing: $(particle_spacings[i])" for i in eachindex(particle_spacings)
                @testset "Spacing Ratio: $spacing_ratio" for spacing_ratio in spacing_ratios
                    tank = RectangularTank(particle_spacings[i],
                                           (water_width, water_height),
                                           (container_width, container_height),
                                           water_density,
                                           spacing_ratio=spacing_ratio)

                    boundary_coords_index += 1
                    @test isapprox(tank.coordinates, expected_fluid_coords[i])
                    @test isapprox(tank.boundary_coordinates,
                                   expected_bound_coords[boundary_coords_index])
                end
            end
        end

        @testset "Velocities" begin
            tank = RectangularTank(0.2, (water_width, water_height),
                                   (container_width, container_height), water_density,
                                   init_velocity=(1.0, 2.5))

            expected_velocities = [1.0 1.0 1.0 1.0; 2.5 2.5 2.5 2.5]

            @test isapprox(tank.velocities, expected_velocities)
        end

        @testset "Info And Error" begin
            particle_spacing = 0.2
            @test_warn "Info: The desired container width 0.7" RectangularTank(particle_spacing,
                                                                               (water_width,
                                                                                water_height),
                                                                               (container_width,
                                                                                container_height),
                                                                               water_density,
                                                                               spacing_ratio=3)

            error_str = "`tank_size` must be of length 2 for a 2D problem"
            @test_throws ArgumentError(error_str) RectangularTank(particle_spacing,
                                                                  (water_width,
                                                                   water_height),
                                                                  (container_width,
                                                                   container_height,
                                                                   0),
                                                                  water_density,
                                                                  spacing_ratio=3)

            error_str = "`tank_size` must be of length 3 for a 3D problem"
            @test_throws ArgumentError(error_str) RectangularTank(particle_spacing,
                                                                  (water_width,
                                                                   water_height,
                                                                   0.5),
                                                                  (container_width,
                                                                   container_height),
                                                                  water_density,
                                                                  spacing_ratio=3)
        end
    end

    @testset verbose=true "Multiple Boundary Layers" begin
        water_width = 0.5
        water_height = 0.5
        container_width = 1
        container_height = 1
        water_density = 500

        @testset "Coordinates" begin
            expected_bound_coords = [-1.0 -1.0 -0.5 -0.5 0.0 0.0 1.5 1.5 2.0 2.0 2.5 2.5 0.5 1.0 0.5 1.0 0.5 1.0 0.5 1.0 0.5 1.0 0.5 1.0 -1.0 -1.0 -1.0 -0.5 -0.5 -0.5 0.0 0.0 0.0 -1.0 -1.0 -1.0 -0.5 -0.5 -0.5 0.0 0.0 0.0 1.5 1.5 1.5 2.0 2.0 2.0 2.5 2.5 2.5 1.5 1.5 1.5 2.0 2.0 2.0 2.5 2.5 2.5;
                                     0.5 1.0 0.5 1.0 0.5 1.0 0.5 1.0 0.5 1.0 0.5 1.0 -1.0 -1.0 -0.5 -0.5 0.0 0.0 1.5 1.5 2.0 2.0 2.5 2.5 -1.0 -0.5 0.0 -1.0 -0.5 0.0 -1.0 -0.5 0.0 1.5 2.0 2.5 1.5 2.0 2.5 1.5 2.0 2.5 -1.0 -0.5 0.0 -1.0 -0.5 0.0 -1.0 -0.5 0.0 1.5 2.0 2.5 1.5 2.0 2.5 1.5 2.0 2.5]

            tank = RectangularTank(0.5, (water_width, water_height),
                                   (container_width, container_height), water_density,
                                   n_layers=3)

            @test isapprox(tank.boundary_coordinates, expected_bound_coords)
        end
    end

    @testset verbose=true "Boundary Faces" begin
        water_density = 750.5

        # Enable or disable faces
        faces = [
            (false, false, false, true),
            (false, false, true, false),
            (false, false, true, true),
            (false, true, false, false),
            (false, true, false, true),
            (false, true, true, false),
            (false, true, true, true),
            (true, false, false, false),
            (true, false, false, true),
            (true, false, true, false),
            (true, false, true, true),
            (true, true, false, false),
            (true, true, false, true),
            (true, true, true, false)]

        @testset "One Boundary Layer" begin for i in eachindex(faces)
            expected_bound_coords = [
                [0.2 0.4 0.6 0.8
                 1.0 1.0 1.0 1.0],
                [0.2 0.4 0.6 0.8
                 0.0 0.0 0.0 0.0],
                [0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8
                 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0],
                [1.0 1.0 1.0 1.0
                 0.2 0.4 0.6 0.8],
                [1.0 1.0 1.0 1.0 0.2 0.4 0.6 0.8 1.0
                 0.2 0.4 0.6 0.8 1.0 1.0 1.0 1.0 1.0],
                [1.0 1.0 1.0 1.0 0.2 0.4 0.6 0.8 1.0
                 0.2 0.4 0.6 0.8 0.0 0.0 0.0 0.0 0.0],
                [1.0 1.0 1.0 1.0 0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8 1.0 1.0
                 0.2 0.4 0.6 0.8 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 0.0 1.0],
                [0.0 0.0 0.0 0.0
                 0.2 0.4 0.6 0.8],
                [0.0 0.0 0.0 0.0 0.2 0.4 0.6 0.8 0.0
                 0.2 0.4 0.6 0.8 1.0 1.0 1.0 1.0 1.0],
                [0.0 0.0 0.0 0.0 0.2 0.4 0.6 0.8 0.0
                 0.2 0.4 0.6 0.8 0.0 0.0 0.0 0.0 0.0],
                [0.0 0.0 0.0 0.0 0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8 0.0 0.0
                 0.2 0.4 0.6 0.8 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 0.0 1.0],
                [0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0
                 0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8],
                [0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 0.2 0.4 0.6 0.8 0.0 1.0
                 0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8 1.0 1.0 1.0 1.0 1.0 1.0],
                [0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 0.2 0.4 0.6 0.8 0.0 1.0
                 0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8 0.0 0.0 0.0 0.0 0.0 0.0]]

            tank = RectangularTank(0.2, (0.6, 0.6), (0.8, 0.8), water_density,
                                   n_layers=1, faces=faces[i])

            @test isapprox(tank.boundary_coordinates, expected_bound_coords[i])
        end end

        @testset "Multiple Boundary Layers" begin
            expected_bound_coords = [
                [0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8
                 1.0 1.0 1.0 1.0 1.2 1.2 1.2 1.2 1.4 1.4 1.4 1.4],
                [0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8
                 -0.4 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 -0.2 0.0 0.0 0.0 0.0],
                [0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8
                 -0.4 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 -0.2 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.2 1.2 1.2 1.2 1.4 1.4 1.4 1.4],
                [1.0 1.0 1.0 1.0 1.2 1.2 1.2 1.2 1.4 1.4 1.4 1.4
                 0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8 0.2 0.4 0.6 0.8],
                [1.0 1.0 1.0 1.0 1.2 1.2 1.2 1.2 1.4 1.4 1.4 1.4 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 1.0 1.0 1.0 1.2 1.2 1.2 1.4 1.4 1.4;
                 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 1.0 1.0 1.0 1.0 1.2 1.2 1.2 1.2 1.4 1.4 1.4 1.4 1.0 1.2 1.4 1.0 1.2 1.4 1.0 1.2 1.4],
                [1.0 1.0 1.0 1.0 1.2 1.2 1.2 1.2 1.4 1.4 1.4 1.4 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 1.0 1.0 1.0 1.2 1.2 1.2 1.4 1.4 1.4;
                 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 -0.4 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 -0.2 0.0 0.0 0.0 0.0 -0.4 -0.2 0.0 -0.4 -0.2 0.0 -0.4 -0.2 0.0],
                [1.0 1.0 1.0 1.0 1.2 1.2 1.2 1.2 1.4 1.4 1.4 1.4 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 1.0 1.0 1.0 1.2 1.2 1.2 1.4 1.4 1.4 1.0 1.0 1.0 1.2 1.2 1.2 1.4 1.4 1.4;
                 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 -0.4 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 -0.2 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.2 1.2 1.2 1.2 1.4 1.4 1.4 1.4 -0.4 -0.2 0.0 -0.4 -0.2 0.0 -0.4 -0.2 0.0 1.0 1.2 1.4 1.0 1.2 1.4 1.0 1.2 1.4],
                [-0.4 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 -0.2 0.0 0.0 0.0 0.0;
                 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8],
                [-0.4 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 -0.2 0.0 0.0 0.0 0.0 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 0.0 0.0 0.0;
                 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 1.0 1.0 1.0 1.0 1.2 1.2 1.2 1.2 1.4 1.4 1.4 1.4 1.0 1.2 1.4 1.0 1.2 1.4 1.0 1.2 1.4],
                [-0.4 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 -0.2 0.0 0.0 0.0 0.0 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 0.0 0.0 0.0;
                 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 -0.4 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 -0.2 0.0 0.0 0.0 0.0 -0.4 -0.2 0.0 -0.4 -0.2 0.0 -0.4 -0.2 0.0],
                [-0.4 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 -0.2 0.0 0.0 0.0 0.0 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 0.0 0.0 0.0 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 0.0 0.0 0.0;
                 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 -0.4 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 -0.2 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.2 1.2 1.2 1.2 1.4 1.4 1.4 1.4 -0.4 -0.2 0.0 -0.4 -0.2 0.0 -0.4 -0.2 0.0 1.0 1.2 1.4 1.0 1.2 1.4 1.0 1.2 1.4],
                [-0.4 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 -0.2 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.2 1.2 1.2 1.2 1.4 1.4 1.4 1.4;
                 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8],
                [-0.4 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 -0.2 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.2 1.2 1.2 1.2 1.4 1.4 1.4 1.4 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 0.0 0.0 0.0 1.0 1.0 1.0 1.2 1.2 1.2 1.4 1.4 1.4;
                 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 1.0 1.0 1.0 1.0 1.2 1.2 1.2 1.2 1.4 1.4 1.4 1.4 1.0 1.2 1.4 1.0 1.2 1.4 1.0 1.2 1.4 1.0 1.2 1.4 1.0 1.2 1.4 1.0 1.2 1.4],
                [-0.4 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 -0.2 0.0 0.0 0.0 0.0 1.0 1.0 1.0 1.0 1.2 1.2 1.2 1.2 1.4 1.4 1.4 1.4 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 0.0 0.0 0.0 1.0 1.0 1.0 1.2 1.2 1.2 1.4 1.4 1.4;
                 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 0.2 0.4 0.6000000000000001 0.8 -0.4 -0.4 -0.4 -0.4 -0.2 -0.2 -0.2 -0.2 0.0 0.0 0.0 0.0 -0.4 -0.2 0.0 -0.4 -0.2 0.0 -0.4 -0.2 0.0 -0.4 -0.2 0.0 -0.4 -0.2 0.0 -0.4 -0.2 0.0],
            ]

            for i in eachindex(faces)
                tank = RectangularTank(0.2, (0.6, 0.6), (0.8, 0.8), water_density,
                                       n_layers=3, faces=faces[i])

                @test isapprox(tank.boundary_coordinates, expected_bound_coords[i])
            end
        end
    end
end
