@testset verbose=true "SphereShape" begin
    positions = [(0.0, 0.0), (3.0, 4.0), (-3.0, -4.0), (3.0, -4), (-3.0, 4.0)]

    radius = 2.0
    particle_spacing = 0.8

    shape_names = [
        "Filled VortexSphere 2D",
        "Filled VortexSphere 2D with Cutout",
        "Hollow RoundSphere with One Layer",
        "Hollow RoundSphere with Multiple Layers",
        "Hollow RoundSphere Outwards",
    ]

    shapes = [
        SphereShape(particle_spacing, radius, (0.0, 0.0), 1000.0),
        SphereShape(particle_spacing, radius, (3.0, 4.0), 1000.0,
                    cutout_min=(3.0, 4.0), cutout_max=(5.0, 4.0 + 0.5particle_spacing)),
        SphereShape(particle_spacing, radius, (-3.0, -4.0), 1000.0,
                    shape_type=RoundSphere(), n_layers=1),
        SphereShape(particle_spacing, radius, (3.0, -4), 1000.0, shape_type=RoundSphere(),
                    n_layers=3),
        SphereShape(particle_spacing, radius, (-3.0, 4.0), 1000.0, shape_type=RoundSphere(),
                    n_layers=2, layer_inwards=false),
    ]

    # Expected coordinates for the shape types above for the position [0, 0].
    expected_coords = [
        [-0.8 0.0 0.8 -1.6 -0.8 0.0 0.8 1.6 -1.6 -0.8 0.0 0.8 1.6 -1.6 -0.8 0.0 0.8 1.6 -0.8 0.0 0.8
         -1.6 -1.6 -1.6 -0.8 -0.8 -0.8 -0.8 -0.8 0.0 0.0 0.0 0.0 0.0 0.8 0.8 0.8 0.8 0.8 1.6 1.6 1.6],
        [-0.8 0.0 0.8 -1.6 -0.8 0.0 0.8 1.6 -1.6 -0.8 -1.6 -0.8 0.0 0.8 1.6 -0.8 0.0 0.8
         -1.6 -1.6 -1.6 -0.8 -0.8 -0.8 -0.8 -0.8 0.0 0.0 0.8 0.8 0.8 0.8 0.8 1.6 1.6 1.6],
        [2.0 1.84776 1.41421 0.765367 5.66554e-16 -0.765367 -1.41421 -1.84776 -2.0 -1.84776 -1.41421 -0.765367 -3.67394e-16 0.765367 1.41421 1.84776
         0.0 0.765367 1.41421 1.84776 2.0 1.84776 1.41421 0.765367 1.13311e-15 -0.765367 -1.41421 -1.84776 -2.0 -1.84776 -1.41421 -0.765367],
        [2.0 1.84776 1.41421 0.76537 0.0 -0.76537 -1.41421 -1.84776 -2.0 -1.84776 -1.41421 -0.76537 -0.0 0.76537 1.41421 1.84776 1.2 0.91925 0.20838 -0.6 -1.12763 -1.12763 -0.6 0.20838 0.91925 0.4 -0.2 -0.2;
         0.0 0.76537 1.41421 1.84776 2.0 1.84776 1.41421 0.76537 0.0 -0.76537 -1.41421 -1.84776 -2.0 -1.84776 -1.41421 -0.76537 0.0 0.77135 1.18177 1.03923 0.41042 -0.41042 -1.03923 -1.18177 -0.77135 0.0 0.34641 -0.34641],
        [2.0 1.84776 1.41421 0.76537 0.0 -0.76537 -1.41421 -1.84776 -2.0 -1.84776 -1.41421 -0.76537 -0.0 0.76537 1.41421 1.84776 2.8 2.68658 2.35551 1.83361 1.16316 0.39848 -0.39848 -1.16316 -1.83361 -2.35551 -2.68658 -2.8 -2.68658 -2.35551 -1.83361 -1.16316 -0.39848 0.39848 1.16316 1.83361 2.35551 2.68658;
         0.0 0.76537 1.41421 1.84776 2.0 1.84776 1.41421 0.76537 0.0 -0.76537 -1.41421 -1.84776 -2.0 -1.84776 -1.41421 -0.76537 0.0 0.78885 1.51379 2.1161 2.54697 2.7715 2.7715 2.54697 2.1161 1.51379 0.78885 -0.0 -0.78885 -1.51379 -2.1161 -2.54697 -2.7715 -2.7715 -2.54697 -2.1161 -1.51379 -0.78885]
    ]

    @testset "$(shape_names[i])" for i in eachindex(shape_names)
        @test isapprox(shapes[i].coordinates, expected_coords[i] .+ positions[i]; atol=1e-4)
    end
end
